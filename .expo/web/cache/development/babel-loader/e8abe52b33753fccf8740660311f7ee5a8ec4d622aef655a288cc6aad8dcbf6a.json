{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from 'react';\nimport { MapContainer, TileLayer, useMapEvents } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DashboardScreen = function DashboardScreen() {\n  var navigate = useNavigate();\n  var reverseGeocode = function () {\n    var _ref = _asyncToGenerator(function* (latitude, longitude) {\n      try {\n        var url = \"https://nominatim.openstreetmap.org/reverse?format=json&lat=\" + latitude + \"&lon=\" + longitude;\n        var response = yield fetch(url);\n        var data = yield response.json();\n        if (data && data.address && data.address.country) {\n          return data.address.country;\n        } else {\n          console.log(\"Aucun pays trouvé à ces coordonnées.\");\n          return null;\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de la requête de géocodage inversé : \", error);\n        return null;\n      }\n    });\n    return function reverseGeocode(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var MapClickHandler = function MapClickHandler() {\n    useMapEvents({\n      click: function () {\n        var _click = _asyncToGenerator(function* (e) {\n          var countryName = yield reverseGeocode(e.latlng.lat, e.latlng.lng);\n          if (countryName) {\n            navigate(\"/countrydetails/\" + countryName);\n          }\n        });\n        function click(_x3) {\n          return _click.apply(this, arguments);\n        }\n        return click;\n      }()\n    });\n    return null;\n  };\n  return _jsx(\"div\", {\n    style: styles.container,\n    children: _jsxs(\"div\", {\n      style: styles.card,\n      children: [_jsx(\"div\", {\n        style: styles.cardHeader,\n        children: _jsx(\"h2\", {\n          style: styles.cardHeaderText,\n          children: \"Bienvenue sur Sante-APP!\"\n        })\n      }), _jsxs(\"div\", {\n        style: styles.cardBody,\n        children: [_jsx(\"p\", {\n          style: styles.cardBodyText,\n          children: \"D\\xE9couvrez une nouvelle \\xE8re de gestion de la sant\\xE9 avec Sante-APP - votre partenaire fiable pour une vie plus saine et heureuse. Notre application r\\xE9volutionnaire offre une approche holistique pour g\\xE9rer vos besoins de sant\\xE9.\"\n        }), _jsxs(MapContainer, {\n          center: [37.78825, -122.4324],\n          zoom: 13,\n          scrollWheelZoom: true,\n          style: styles.map,\n          children: [_jsx(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 OpenStreetMap contributors\"\n          }), _jsx(MapClickHandler, {})]\n        })]\n      })]\n    })\n  });\n};\nvar styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: '#f5f5f5',\n    padding: '40px',\n    minHeight: '100vh'\n  },\n  card: {\n    width: '80%',\n    maxWidth: '800px',\n    borderRadius: '20px',\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\n    overflow: 'hidden',\n    backgroundColor: '#fff'\n  },\n  cardHeader: {\n    backgroundColor: '#6AC8FF',\n    padding: '30px',\n    color: '#fff',\n    textAlign: 'center'\n  },\n  cardHeaderText: {\n    fontSize: '24px',\n    fontWeight: 'bold'\n  },\n  cardBody: {\n    padding: '30px'\n  },\n  cardBodyText: {\n    color: '#333',\n    fontSize: '16px',\n    marginBottom: '20px',\n    lineHeight: '1.6'\n  },\n  map: {\n    height: '500px',\n    width: '100%',\n    marginTop: '20px'\n  }\n};\nexport default DashboardScreen;","map":{"version":3,"names":["React","MapContainer","TileLayer","useMapEvents","useNavigate","jsx","_jsx","jsxs","_jsxs","DashboardScreen","navigate","reverseGeocode","_ref","_asyncToGenerator","latitude","longitude","url","response","fetch","data","json","address","country","console","log","error","_x","_x2","apply","arguments","MapClickHandler","click","_click","e","countryName","latlng","lat","lng","_x3","style","styles","container","children","card","cardHeader","cardHeaderText","cardBody","cardBodyText","center","zoom","scrollWheelZoom","map","attribution","display","flexDirection","alignItems","backgroundColor","padding","minHeight","width","maxWidth","borderRadius","boxShadow","overflow","color","textAlign","fontSize","fontWeight","marginBottom","lineHeight","height","marginTop"],"sources":["C:/Users/naelo/Desktop/sante-app-react-js/src/UserDashboardScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { MapContainer, TileLayer, useMapEvents } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DashboardScreen = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const reverseGeocode = async (latitude, longitude) => {\r\n      try {\r\n          const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`;\r\n          const response = await fetch(url);\r\n          const data = await response.json();\r\n\r\n          if (data && data.address && data.address.country) {\r\n              return data.address.country;\r\n          } else {\r\n              console.log(\"Aucun pays trouvé à ces coordonnées.\");\r\n              return null;\r\n          }\r\n      } catch (error) {\r\n          console.error(\"Erreur lors de la requête de géocodage inversé : \", error);\r\n          return null;\r\n      }\r\n  };\r\n\r\n  const MapClickHandler = () => {\r\n      useMapEvents({\r\n          click: async (e) => {\r\n              const countryName = await reverseGeocode(e.latlng.lat, e.latlng.lng);\r\n              if (countryName) {\r\n                  navigate(`/countrydetails/${countryName}`);\r\n              }\r\n          },\r\n      });\r\n      return null;\r\n  };\r\n    \r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.card}>\r\n        <div style={styles.cardHeader}>\r\n          <h2 style={styles.cardHeaderText}>Bienvenue sur Sante-APP!</h2>\r\n        </div>\r\n        <div style={styles.cardBody}>\r\n          <p style={styles.cardBodyText}>\r\n            Découvrez une nouvelle ère de gestion de la santé avec Sante-APP - votre partenaire fiable pour une vie plus saine et heureuse. Notre application révolutionnaire offre une approche holistique pour gérer vos besoins de santé.\r\n          </p>\r\n          <MapContainer\r\n            center={[37.78825, -122.4324]}\r\n            zoom={13}\r\n            scrollWheelZoom={true}\r\n            style={styles.map}\r\n          >\r\n            <TileLayer\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              attribution='&copy; OpenStreetMap contributors'\r\n            />\r\n            <MapClickHandler />\r\n          </MapContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n    padding: '40px',\r\n    minHeight: '100vh',\r\n  },\r\n  card: {\r\n    width: '80%',\r\n    maxWidth: '800px',\r\n    borderRadius: '20px',\r\n    boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.1)',\r\n    overflow: 'hidden',\r\n    backgroundColor: '#fff',\r\n  },\r\n  cardHeader: {\r\n    backgroundColor: '#6AC8FF',\r\n    padding: '30px',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n  },\r\n  cardHeaderText: {\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n  },\r\n  cardBody: {\r\n    padding: '30px',\r\n  },\r\n  cardBodyText: {\r\n    color: '#333',\r\n    fontSize: '16px',\r\n    marginBottom: '20px',\r\n    lineHeight: '1.6',\r\n  },\r\n  map: {\r\n    height: '500px',\r\n    width: '100%',\r\n    marginTop: '20px',\r\n  },\r\n};\r\n\r\nexport default DashboardScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}